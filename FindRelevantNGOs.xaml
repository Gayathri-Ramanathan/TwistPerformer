<Activity mc:Ignorable="sap sap2010" x:Class="FindRelevantNGOs" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:t="clr-namespace:Twist_Performer_v5;assembly=DataService.Twist_Performer_v5" xmlns:uda="clr-namespace:UiPath.DataService.Activities;assembly=UiPath.DataService.Activities.Core" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="inListTweetDistricts" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="inStrTweetContext" Type="InArgument(x:String)" />
    <x:Property Name="outListNGOs" Type="OutArgument(scg:List(t:NGO))" />
    <x:Property Name="inTxItem" Type="InArgument(ui:QueueItem)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>904,1114</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>FindRelevantNGOs_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="58">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Twist_Performer_v5</x:String>
      <x:String>UiPath.DataService.Definition</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.DataService.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="50">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>DataService.Twist_Performer_v5</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Definition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Activities.Core</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MLServices.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="FindRelevantNGOs" sap:VirtualizedContainerService.HintSize="847,1049" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Assign - Initialize out NGOs" sap:VirtualizedContainerService.HintSize="805,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(t:NGO)">[outListNGOs]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(t:NGO)">[new List(Of NGO)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - District" sap:VirtualizedContainerService.HintSize="805,705" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[inListTweetDistricts]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="769,571" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IList(t:NGO)" Default="[new List(Of NGO)]" Name="listMatchingNGOs" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[inStrTweetContext.Equals(&quot;Oxygen&quot;)]" DisplayName="If/Else - Oxygen or Plasma" sap:VirtualizedContainerService.HintSize="727,379" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <uda:QueryEntityRecords x:TypeArguments="t:NGO" TotalRecords="{x:Null}" ContinueOnError="False" DisplayName="Query Entity Records - Matching NGOs with o2/plasma" ExpansionDepth="2" sap:VirtualizedContainerService.HintSize="341,221" sap2010:WorkflowViewState.IdRef="QueryEntityRecords`1_2" OutputRecords="[listMatchingNGOs]" Skip="0" SortAscending="True" SortByField="Id" TimeoutInMs="30000" Top="100">
                  <uda:QueryEntityRecords.FilterArguments>
                    <uda:FilterArgument FilterActivityType="t:NGO">
                      <uda:FilterArgument.Filter>
                        <uda:GroupFilter Operator="and">
                          <uda:GroupFilter.Filters>
                            <scg:List x:TypeArguments="uda:SimpleFilter" Capacity="4">
                              <uda:SimpleFilter ExpressionValue="{x:Null}" FieldName="OxygenCylinders" FieldType="System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]" Operator="=" ValueIndex="0" />
                            </scg:List>
                          </uda:GroupFilter.Filters>
                          <uda:GroupFilter.Groups>
                            <scg:List x:TypeArguments="uda:GroupFilter" Capacity="4">
                              <uda:GroupFilter Operator="or">
                                <uda:GroupFilter.Filters>
                                  <scg:List x:TypeArguments="uda:SimpleFilter" Capacity="4">
                                    <uda:SimpleFilter ExpressionValue="{x:Null}" FieldName="State" FieldType="System.String" Operator="contains" ValueIndex="1" />
                                    <uda:SimpleFilter ExpressionValue="{x:Null}" FieldName="City" FieldType="System.String" Operator="contains" ValueIndex="2" />
                                    <uda:SimpleFilter ExpressionValue="{x:Null}" FieldName="District" FieldType="System.String" Operator="contains" ValueIndex="3" />
                                  </scg:List>
                                </uda:GroupFilter.Filters>
                                <uda:GroupFilter.Groups>
                                  <scg:List x:TypeArguments="uda:GroupFilter" Capacity="0" />
                                </uda:GroupFilter.Groups>
                              </uda:GroupFilter>
                            </scg:List>
                          </uda:GroupFilter.Groups>
                        </uda:GroupFilter>
                      </uda:FilterArgument.Filter>
                    </uda:FilterArgument>
                  </uda:QueryEntityRecords.FilterArguments>
                  <uda:QueryEntityRecords.FilterValues>
                    <scg:List x:TypeArguments="InArgument" Capacity="4">
                      <InArgument x:TypeArguments="s:Nullable(x:Boolean)">[True]</InArgument>
                      <InArgument x:TypeArguments="x:String">[item.Trim]</InArgument>
                      <InArgument x:TypeArguments="x:String">[item.Trim]</InArgument>
                      <InArgument x:TypeArguments="x:String">[item.Trim]</InArgument>
                    </scg:List>
                  </uda:QueryEntityRecords.FilterValues>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </uda:QueryEntityRecords>
              </If.Then>
              <If.Else>
                <uda:QueryEntityRecords x:TypeArguments="t:NGO" TotalRecords="{x:Null}" ContinueOnError="False" DisplayName="Query Entity Records - Matching NGOs with o2/plasma" ExpansionDepth="2" sap:VirtualizedContainerService.HintSize="341,221" sap2010:WorkflowViewState.IdRef="QueryEntityRecords`1_3" OutputRecords="[listMatchingNGOs]" Skip="0" SortAscending="True" SortByField="Id" TimeoutInMs="30000" Top="100">
                  <uda:QueryEntityRecords.FilterArguments>
                    <uda:FilterArgument FilterActivityType="t:NGO">
                      <uda:FilterArgument.Filter>
                        <uda:GroupFilter Operator="and">
                          <uda:GroupFilter.Filters>
                            <scg:List x:TypeArguments="uda:SimpleFilter" Capacity="4">
                              <uda:SimpleFilter ExpressionValue="{x:Null}" FieldName="PlasmaDonors" FieldType="System.Nullable`1[[System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]" Operator="=" ValueIndex="0" />
                            </scg:List>
                          </uda:GroupFilter.Filters>
                          <uda:GroupFilter.Groups>
                            <scg:List x:TypeArguments="uda:GroupFilter" Capacity="4">
                              <uda:GroupFilter Operator="or">
                                <uda:GroupFilter.Filters>
                                  <scg:List x:TypeArguments="uda:SimpleFilter" Capacity="4">
                                    <uda:SimpleFilter ExpressionValue="{x:Null}" FieldName="State" FieldType="System.String" Operator="contains" ValueIndex="1" />
                                    <uda:SimpleFilter ExpressionValue="{x:Null}" FieldName="City" FieldType="System.String" Operator="contains" ValueIndex="2" />
                                    <uda:SimpleFilter ExpressionValue="{x:Null}" FieldName="District" FieldType="System.String" Operator="contains" ValueIndex="3" />
                                  </scg:List>
                                </uda:GroupFilter.Filters>
                                <uda:GroupFilter.Groups>
                                  <scg:List x:TypeArguments="uda:GroupFilter" Capacity="0" />
                                </uda:GroupFilter.Groups>
                              </uda:GroupFilter>
                            </scg:List>
                          </uda:GroupFilter.Groups>
                        </uda:GroupFilter>
                      </uda:FilterArgument.Filter>
                    </uda:FilterArgument>
                  </uda:QueryEntityRecords.FilterArguments>
                  <uda:QueryEntityRecords.FilterValues>
                    <scg:List x:TypeArguments="InArgument" Capacity="4">
                      <InArgument x:TypeArguments="s:Nullable(x:Boolean)">[True]</InArgument>
                      <InArgument x:TypeArguments="x:String">[item.Trim]</InArgument>
                      <InArgument x:TypeArguments="x:String">[item.Trim]</InArgument>
                      <InArgument x:TypeArguments="x:String">[item.Trim]</InArgument>
                    </scg:List>
                  </uda:QueryEntityRecords.FilterValues>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </uda:QueryEntityRecords>
              </If.Else>
            </If>
            <Assign DisplayName="Assign - Add to master NGO list" sap:VirtualizedContainerService.HintSize="727,60" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(t:NGO)">[outListNGOs]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(t:NGO)">[outListNGOs.Concat(listMatchingNGOs).ToList]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke AddQItemLog workflow - Log NGO count" sap:VirtualizedContainerService.HintSize="805,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="AddQItemLog.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="inStrLog">["Relevant NGOs found - " + outListNGOs.Count.ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="inStrTxItemId">[inTxItem.Id.ToString]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>